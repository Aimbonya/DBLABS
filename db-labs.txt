
	Система управления барбершопом

Функциональные требования:
 - Авторизация пользователей
 - Управление пользователями (CRUD)
 - Система ролей для пользователей
 - Создание заказа и добавление в очередь
 - Отслеживание статусов заказов
 - Система отхывов для барбера
 - Хранение информации о пользователях и их профилях
 - Журналирование действий пользователей

1. User (Пользователь)
Хранит информацию о пользователях системы.

id (PK) serial — Уникальный идентификатор пользователя.
username character varying(255) not null — Имя пользователя.
email character varying(255) not null — Почта пользователя.
password character varying(255) not null — Пароль пользователя.
role_id (FK) integer — Связь с сущностью Role, роль пользователя в системе.
phone_num integer - Номер телефона пользователя.
Связи:
Один ко многим с сущностью Role.
Один ко многим с сущностью AuditLog (пользователь совершает действия, которые записываются в журнал).
Один ко многим с сущностью Booking (пользователь может сделать несколько бронирований).
Один ко многим с сущностью Payment (пользователь может совершить несколько платежей).

2. Role (Роль)
Хранит информацию о ролях пользователей (например, администратор, клиент, мастер).

id (PK) serial — Уникальный идентификатор роли.
name character varying(100) not null unique — Название роли (например, "admin", "customer").
description text — Описание роли.
Связи:
Один ко многим с сущностью User (одна роль может быть присвоена нескольким пользователям).


3. Payment (Платеж)
Хранит информацию о платежах, совершённых пользователями.

id (PK) serial — Уникальный идентификатор платежа.
user_id (FK) integer — Связь с сущностью User, пользователь, совершивший платёж.
price integer not null — Сумма платежа.
payment_date timestamp not null — Дата и время совершения платежа.
payment_method character varying(50) — Способ оплаты (например, "карта", "наличные").
status character varying(50) — Статус платежа (например, "успешно", "неуспешно").
Связи:
Один ко многим с сущностью User (один пользователь может совершить несколько платежей).
Один ко многим с сущностью Booking (один платёж может быть привязан к одному бронированию).

4. AuditLog (Журнал действий)
Хранит информацию о действиях пользователей для отслеживания активности.

id (PK) serial — Уникальный идентификатор записи.
user_id (FK) integer — Связь с сущностью User, пользователь, совершивший действие.
action character varying(255) not null — Описание действия (например, "вход в систему", "создание бронирования").
time timestamp — Дата и время выполнения действия.
Связи:
Один ко многим с сущностью User (один пользователь может выполнить несколько действий, которые будут записаны в журнал).

5. Booking (Бронирование)
Хранит информацию о бронированиях услуг.

id (PK) serial — Уникальный идентификатор бронирования.
user_id (FK) integer — Связь с сущностью User, пользователь, который сделал бронирование.
barber_id (FK) integer — Связь с сущностью Barber, мастер, с которым было забронировано время.
service_id (FK) integer — Связь с сущностью Service, услуга, которую заказал пользователь.
booking date timestamp not null — Дата и время бронирования.
status character varying — Статус бронирования (например, "подтверждено", "отменено").
Связи:
Один ко многим с сущностью User (один пользователь может сделать несколько бронирований).
Один ко многим с сущностью Barber (один мастер может иметь несколько бронирований).
Многие ко многим с сущностью Service (одна услуга может быть забронирована несколько раз, одна бронь может содержать несколько услуг).
Один ко многим с сущностью Payment (один платёж может быть связан с одним бронированием).

6. Barber (Мастер)
Хранит информацию о мастерах, предоставляющих услуги.

id (PK) serial — Уникальный идентификатор мастера.
name character varying(255) not null — Имя мастера.
rating integer — Средняя оценка мастера на основе отзывов.
created_at date - Дата создания профиля барбера
Связи:
Один ко многим с сущностью Review (один мастер может иметь много отзывов).
Один ко многим с сущностью Booking (один мастер может быть забронирован несколько раз).
Один ко многим с сущностью Schedule (один мастер имеет расписание работы на разные даты).

7. Service (Услуга)
Хранит информацию об услугах, предоставляемых барбершопом.

id (PK) serial — Уникальный идентификатор услуги.
name character varying(255) not null — Название услуги (например, "стрижка", "бритьё").
description text — Описание услуги.
price integer not null — Стоимость услуги.
duration_minutes integer not null — Длительность услуги в минутах.
Связи:
Многие ко многим с сущностью Booking через промежуточную таблицу booking_services (бронирование может включать несколько услуг).
Один ко многим с сущностью Review (одна услуга может иметь много отзывов).
Один ко многим с сущностью Discount (одна услуга может иметь несколько скидок через промежуточную таблицу).

8. Review (Отзыв)
Хранит отзывы клиентов о мастерах и услугах.

id (PK) serial — Уникальный идентификатор отзыва.
user_id (FK) integer — Связь с сущностью User, пользователь, который оставил отзыв.
barber_id (FK) integer — Связь с сущностью Barber, мастер, к которому относится отзыв.
service_id (FK) integer — Связь с сущностью Service, услуга, к которой относится отзыв.
rating integer not null — Оценка (например, 4.5).
comment text — Текст отзыва.
created_at timestamp — Дата и время публикации отзыва.
Связи:
Один ко многим с сущностью User (один пользователь может оставить несколько отзывов).
Один ко многим с сущностью Barber (один мастер может получить несколько отзывов).
Один ко многим с сущностью Service (одна услуга может иметь несколько отзывов).

9. Schedule (Расписание)
Хранит информацию о доступности мастеров для бронирований.

id (PK) serial — Уникальный идентификатор записи расписания.
barber_id (FK) integer — Связь с сущностью Barber, мастер, для которого создается расписание.
work_date date not null — Дата рабочего дня мастера.
start_time time not null — Время начала рабочего дня.
end_time time not null — Время окончания рабочего дня.
Связи:
Один ко многим с сущностью Barber (один мастер имеет несколько расписаний для разных дней).
Один ко многим с сущностью Booking (бронирования могут происходить в рамках доступных временных слотов в расписании мастера).

10. Discount (Скидка)
Хранит информацию о скидках на услуги.

id (PK) serial — Уникальный идентификатор скидки.
name character varying(100) not null — Название скидки.
description text — Описание скидки.
discount integer not null — Процент скидки (например, 10.00).
start_date date not null — Дата начала действия скидки.
end_date date not null — Дата окончания действия скидки.
Связи:
Один к одному с сущностью Booking(К одной брони может быть применена только одна скидка).





